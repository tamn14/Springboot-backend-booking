spring.application.name=Booking

# config connect to database
spring.datasource.url=jdbc:mysql://localhost:3307/booking
spring.datasource.username=spring
spring.datasource.password=spring

# Auto create table
spring.jpa.hibernate.ddl-auto=update

# Config Jwt , time is minute
jwt.signerKey="1TjXchw5FloESb63Kc+DFhTARvpWL4jUGCwfGWxuG5SIf/1y/LgJxHnMqaF6A/ij"
jwt.expirationTime=10
jwt.refreshable-duration=720


#Config Qr
Qr.width=300
Qr.height=300


# cofig module send email
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=<your email>
spring.mail.password=<your app password>
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
mail.from=Tamn0443@gmail.com

# config module OAuth2
# App URL
spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/oauth2/callback/google
spring.security.oauth2.client.registration.google.client-name=Google
# Provider info
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email



